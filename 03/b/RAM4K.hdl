// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=loadR0, b=loadR1, c=loadR2, d=loadR3, e=loadR4, f=loadR5, g=loadR6, h=loadR7);

    RAM512(in=in, load=loadR0, address=address[0..8], out=reg0);
    RAM512(in=in, load=loadR1, address=address[0..8], out=reg1);
    RAM512(in=in, load=loadR2, address=address[0..8], out=reg2);
    RAM512(in=in, load=loadR3, address=address[0..8], out=reg3);
    RAM512(in=in, load=loadR4, address=address[0..8], out=reg4);
    RAM512(in=in, load=loadR5, address=address[0..8], out=reg5);
    RAM512(in=in, load=loadR6, address=address[0..8], out=reg6);
    RAM512(in=in, load=loadR7, address=address[0..8], out=reg7);

    Mux8Way16(a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7, sel=address[9..11], out=out);
}