@256
D=A
@SP
M=D
@boot$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@Sys.init
0;JMP
(boot$ret.1)
//          function Sys.init 0
(Sys.init)
//          push constant 4000	
@4000	
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop pointer 0
@THIS
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 5000
@5000
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop pointer 1
@THAT
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          call Sys.main 0
@Sys.init$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@Sys.main
0;JMP
(Sys.init$ret.1)
//          pop temp 1
@6
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          label LOOP
(Sys.init$LOOP)
//          goto LOOP
@Sys.init$LOOP
0;JMP
//          function Sys.main 5
(Sys.main)
@SP
AM=M+1
A=A-1
M=0
@SP
AM=M+1
A=A-1
M=0
@SP
AM=M+1
A=A-1
M=0
@SP
AM=M+1
A=A-1
M=0
@SP
AM=M+1
A=A-1
M=0
//          push constant 4001
@4001
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop pointer 0
@THIS
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 5001
@5001
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop pointer 1
@THAT
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 200
@200
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop local 1
@LCL
A=M
A=A+1
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 40
@40
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop local 2
@LCL
A=M
D=A
@2
A=A+D
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 6
@6
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop local 3
@LCL
A=M
D=A
@3
A=A+D
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 123
@123
D=A
@SP
AM=M+1
A=A-1
M=D
//          call Sys.add12 1
@Sys.main$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@6
D=A
@SP
D=M-D
@ARG
M=D
@Sys.add12
0;JMP
(Sys.main$ret.1)
//          pop temp 0
@5
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push local 0
@LCL
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
//          push local 1
@LCL
A=M
A=A+1
D=M
@SP
AM=M+1
A=A-1
M=D
//          push local 2
@LCL
A=M
D=A
@2
A=A+D
D=M
@SP
AM=M+1
A=A-1
M=D
//          push local 3
@LCL
A=M
D=A
@3
A=A+D
D=M
@SP
AM=M+1
A=A-1
M=D
//          push local 4
@LCL
A=M
D=A
@4
A=A+D
D=M
@SP
AM=M+1
A=A-1
M=D
//          add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//          add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//          add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//          add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//          return
@LCL
D=M
@endF
M=D
@5
A=D-A
D=M
@retA
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@endF
AM=M-1
D=M
@THAT
M=D
@endF
AM=M-1
D=M
@THIS
M=D
@endF
AM=M-1
D=M
@ARG
M=D
@endF
AM=M-1
D=M
@LCL
M=D
@retA
A=M
0;JMP
//          function Sys.add12 0
(Sys.add12)
//          push constant 4002
@4002
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop pointer 0
@THIS
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push constant 5002
@5002
D=A
@SP
AM=M+1
A=A-1
M=D
//          pop pointer 1
@THAT
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//          push argument 0
@ARG
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
//          push constant 12
@12
D=A
@SP
AM=M+1
A=A-1
M=D
//          add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//          return
@LCL
D=M
@endF
M=D
@5
A=D-A
D=M
@retA
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@endF
AM=M-1
D=M
@THAT
M=D
@endF
AM=M-1
D=M
@THIS
M=D
@endF
AM=M-1
D=M
@ARG
M=D
@endF
AM=M-1
D=M
@LCL
M=D
@retA
A=M
0;JMP
