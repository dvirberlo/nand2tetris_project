  <class>
  <keyword> class </keyword>
  <identifier> Main </identifier>
  <symbol> { </symbol>
    <subroutineDec>
    <keyword> function </keyword>
    <keyword> void </keyword>
    <identifier> main </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
    <symbol> { </symbol>
      <varDec>
      <keyword> var </keyword>
      <identifier> Array </identifier>
      <identifier> a </identifier>
    </varDec>
    <symbol> ; </symbol>
      <varDec>
      <keyword> var </keyword>
      <keyword> int </keyword>
      <identifier> length </identifier>
    </varDec>
    <symbol> ; </symbol>
      <varDec>
      <keyword> var </keyword>
      <keyword> int </keyword>
      <identifier> i </identifier>
      <symbol> , </symbol>
      <identifier> sum </identifier>
    </varDec>
    <symbol> ; </symbol>
      <letStatement>
      <keyword> let </keyword>
      <identifier> length </identifier>
      <symbol> = </symbol>
      <identifier> Keyboard </identifier>
      <symbol> . </symbol>
      <identifier> readInt </identifier>
      <symbol> ( </symbol>
      <stringConstant> HOW MANY NUMBERS?  </stringConstant>
      <symbol> ) </symbol>
    </letStatement>
    <symbol> ; </symbol>
      <letStatement>
      <keyword> let </keyword>
      <identifier> a </identifier>
      <symbol> = </symbol>
      <identifier> Array </identifier>
      <symbol> . </symbol>
      <identifier> new </identifier>
      <symbol> ( </symbol>
      <identifier> length </identifier>
      <symbol> ) </symbol>
    </letStatement>
    <symbol> ; </symbol>
      <letStatement>
      <keyword> let </keyword>
      <identifier> i </identifier>
      <symbol> = </symbol>
      <integerConstant> 0 </integerConstant>
    </letStatement>
    <symbol> ; </symbol>
      <whileStatement>
      <keyword> while </keyword>
      <symbol> ( </symbol>
      <identifier> i </identifier>
      <symbol> &lt; </symbol>
      <identifier> length </identifier>
      <symbol> ) </symbol>
      <symbol> { </symbol>
      <statements>
        <letStatement>
        <keyword> let </keyword>
        <identifier> a </identifier>
        <symbol> [ </symbol>
        <identifier> i </identifier>
        <symbol> ] </symbol>
        <symbol> = </symbol>
        <identifier> Keyboard </identifier>
        <symbol> . </symbol>
        <identifier> readInt </identifier>
        <symbol> ( </symbol>
        <stringConstant> ENTER THE NEXT NUMBER:  </stringConstant>
        <symbol> ) </symbol>
      </letStatement>
      <symbol> ; </symbol>
        <letStatement>
        <keyword> let </keyword>
        <identifier> i </identifier>
        <symbol> = </symbol>
        <identifier> i </identifier>
        <symbol> + </symbol>
        <integerConstant> 1 </integerConstant>
      </letStatement>
      <symbol> ; </symbol>
    </whileStatement>
    <symbol> } </symbol>
      <letStatement>
      <keyword> let </keyword>
      <identifier> i </identifier>
      <symbol> = </symbol>
      <integerConstant> 0 </integerConstant>
    </letStatement>
    <symbol> ; </symbol>
      <letStatement>
      <keyword> let </keyword>
      <identifier> sum </identifier>
      <symbol> = </symbol>
      <integerConstant> 0 </integerConstant>
    </letStatement>
    <symbol> ; </symbol>
      <whileStatement>
      <keyword> while </keyword>
      <symbol> ( </symbol>
      <identifier> i </identifier>
      <symbol> &lt; </symbol>
      <identifier> length </identifier>
      <symbol> ) </symbol>
      <symbol> { </symbol>
      <statements>
        <letStatement>
        <keyword> let </keyword>
        <identifier> sum </identifier>
        <symbol> = </symbol>
        <identifier> sum </identifier>
        <symbol> + </symbol>
        <identifier> a </identifier>
        <symbol> [ </symbol>
        <identifier> i </identifier>
        <symbol> ] </symbol>
      </letStatement>
      <symbol> ; </symbol>
        <letStatement>
        <keyword> let </keyword>
        <identifier> i </identifier>
        <symbol> = </symbol>
        <identifier> i </identifier>
        <symbol> + </symbol>
        <integerConstant> 1 </integerConstant>
      </letStatement>
      <symbol> ; </symbol>
    </whileStatement>
    <symbol> } </symbol>
      <doStatement>
      <keyword> do </keyword>
      <identifier> Output </identifier>
      <symbol> . </symbol>
      <identifier> printString </identifier>
      <symbol> ( </symbol>
      <stringConstant> THE AVERAGE IS:  </stringConstant>
      <symbol> ) </symbol>
    </doStatement>
    <symbol> ; </symbol>
      <doStatement>
      <keyword> do </keyword>
      <identifier> Output </identifier>
      <symbol> . </symbol>
      <identifier> printInt </identifier>
      <symbol> ( </symbol>
      <identifier> sum </identifier>
      <symbol> / </symbol>
      <identifier> length </identifier>
      <symbol> ) </symbol>
    </doStatement>
    <symbol> ; </symbol>
      <doStatement>
      <keyword> do </keyword>
      <identifier> Output </identifier>
      <symbol> . </symbol>
      <identifier> println </identifier>
      <symbol> ( </symbol>
      <symbol> ) </symbol>
    </doStatement>
    <symbol> ; </symbol>
      <returnStatement>
      <keyword> return </keyword>
    </returnStatement>
    <symbol> ; </symbol>
  </subroutineDec>
  <symbol> } </symbol>
</class>
<symbol> } </symbol>
